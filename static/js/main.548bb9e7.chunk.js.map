{"version":3,"sources":["components/info.js","components/form.js","components/weather.js","App.js","index.js"],"names":["Info","Form","props","onSubmit","weatherMethod","type","name","placeholder","Weather","className","city","country","temp","humidity","sunrise","sunset","error","API_KEY","App","gettingWeather","e","a","async","preventDefault","target","elements","value","fetch","api_url","json","data","console","log","cod","setState","undefined","dateSunrise","Date","sys","sunrise_date","String","getHours","padStart","getMinutes","getSeconds","dateSunset","sunset_date","Math","floor","main","state","checked","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uQAWeA,MATf,WACI,OACI,6BACI,2CACA,+DCIGC,MARf,SAAcC,GACV,OACI,0BAAMC,SAAUD,EAAME,eAClB,2BAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,eAC3C,oDCYGC,MAjBf,SAAiBN,GACb,OACI,yBAAKO,UAAU,eACVP,EAAMQ,MACH,6BACI,wCAAcR,EAAMQ,KAApB,KAA4BR,EAAMS,QAAlC,KACA,2CAAiBT,EAAMU,KAAvB,WACA,wCAAcV,EAAMW,SAApB,KACA,0CAAgBX,EAAMY,QAAtB,KACA,yCAAeZ,EAAMa,OAArB,MAGR,uBAAGN,UAAU,SAASP,EAAMc,SCNlCC,EAAU,mCAmGDC,E,YA/FX,WAAYhB,GAAQ,IAAD,8BACf,4CAAMA,KAaViB,eAAiB,SAAOC,GAAP,2BAAAC,EAAAC,OAAA,mDAEbF,EAAEG,mBAEIb,EAAOU,EAAEI,OAAOC,SAASf,KAAKgB,OAJvB,mCAAAL,EAAA,MAQLM,MAAM,qDAAD,OAAsDjB,EAAtD,kBAAoEO,KARpE,cAOHW,EAPG,kBAAAP,EAAA,MASUO,EAAQC,QATlB,UASHC,EATG,OAUTC,QAAQC,IAAIF,GACK,QAAbA,EAAKG,IAXA,0CAYE,EAAKC,SAAS,CACjBtB,UAAMuB,EACNzB,UAAMyB,EACNxB,aAASwB,EACTrB,aAASqB,EACTpB,YAAQoB,EACRnB,MAAO,oBAlBN,QAsBLoB,EAAc,IAAIC,KAAwB,IAAnBP,EAAKQ,IAAIxB,SAChCyB,EAAeC,OAAOJ,EAAYK,YAAYC,SAAS,EAAG,KAAO,IAAMF,OAAOJ,EAAYO,cAAcD,SAAS,EAAG,KAAO,IAAMF,OAAOJ,EAAYQ,cAAcF,SAAS,EAAG,KAE9KG,EAAa,IAAIR,KAAuB,IAAlBP,EAAKQ,IAAIvB,QAC/B+B,EAAcN,OAAOK,EAAWJ,YAAYC,SAAS,EAAG,KAAO,IAAMF,OAAOK,EAAWF,cAAcD,SAAS,EAAG,KAAO,IAAMF,OAAOK,EAAWD,cAAcF,SAAS,EAAG,KAE9K,EAAKR,SAAS,CACVtB,KAAMmC,KAAKC,MAAMlB,EAAKmB,KAAKrC,KAAO,QAClCF,KAAMoB,EAAKxB,KACXK,QAASmB,EAAKQ,IAAI3B,QAClBE,SAAUiB,EAAKmB,KAAKpC,SACpBC,QAASyB,EACTxB,OAAQ+B,EACR9B,WAAOmB,IAnCF,wBAuCT,EAAKD,SAAS,CACVtB,UAAMuB,EACNzB,UAAMyB,EACNxB,aAASwB,EACTrB,aAASqB,EACTpB,YAAQoB,EACRnB,MAAO,8BA7CF,uCAZb,EAAKkC,MAAQ,CACTC,SAAS,EACTvC,UAAMuB,EACNzB,UAAMyB,EACNxB,aAASwB,EACTrB,aAASqB,EACTpB,YAAQoB,EACRnB,WAAOmB,EACPF,IAAK,IAVM,E,sEAkEf,OACI,yBAAKxB,UAAU,WACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,iBACX,kBAAC,EAAD,CAAML,cAAegD,KAAKjC,iBAC1B,kBAAC,EAAD,CACIP,KAAMwC,KAAKF,MAAMtC,KACjBF,KAAM0C,KAAKF,MAAMxC,KACjBC,QAASyC,KAAKF,MAAMvC,QACpBE,SAAUuC,KAAKF,MAAMrC,SACrBC,QAASsC,KAAKF,MAAMpC,QACpBC,OAAQqC,KAAKF,MAAMnC,OACnBC,MAAOoC,KAAKF,MAAMlC,iB,GApFpCqC,IAAMC,W,MCHxBC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.548bb9e7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Info() {\r\n    return (\r\n        <div>\r\n            <h2>Weather App</h2>\r\n            <p>Get the World weather forecast</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info;","import React from \"react\";\r\n\r\nfunction Form(props) {\r\n    return (\r\n        <form onSubmit={props.weatherMethod}>\r\n            <input type=\"text\" name=\"city\" placeholder=\"Enter city\" />\r\n            <button>Get a forecast</button>\r\n        </form>\r\n    )\r\n}\r\nexport default Form;","import React from \"react\";\r\nfunction Weather(props) {\r\n    return (\r\n        <div className=\"infoWeather\">\r\n            {props.city &&\r\n                <div>\r\n                    <p>Location: {props.city}, {props.country} </p>\r\n                    <p>Temperature: {props.temp}â„ƒ </p>\r\n                    <p>Humidity: {props.humidity}%</p>\r\n                    <p>Sunrise at: {props.sunrise} </p>\r\n                    <p>Sunset at: {props.sunset} </p>\r\n                </div>\r\n            }\r\n            <p className=\"error\">{props.error}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather;","//here i am going to combine all components\r\n\r\nimport React from \"react\";\r\nimport Info from \"./components/info\";\r\nimport Form from \"./components/form\";\r\nimport Weather from \"./components/weather\"\r\n\r\nconst API_KEY = \"82fe346f33a3b30c1d6d2345e8995c97\";\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checked: true,\r\n            temp: undefined,\r\n            city: undefined,\r\n            country: undefined,\r\n            sunrise: undefined,\r\n            sunset: undefined,\r\n            error: undefined,\r\n            cod: ''\r\n        };\r\n    }\r\n\r\n    gettingWeather = async (e) => {\r\n        //stop updating when submit \r\n        e.preventDefault();\r\n\r\n        const city = e.target.elements.city.value;\r\n\r\n        if (city) {\r\n            const api_url = await\r\n                fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\r\n            const data = await api_url.json();\r\n            console.log(data);\r\n            if (data.cod === '404') {\r\n                return this.setState({\r\n                    temp: undefined,\r\n                    city: undefined,\r\n                    country: undefined,\r\n                    sunrise: undefined,\r\n                    sunset: undefined,\r\n                    error: \"City not found\"\r\n                });\r\n            }\r\n\r\n            var dateSunrise = new Date(data.sys.sunrise * 1000);\r\n            var sunrise_date = String(dateSunrise.getHours()).padStart(2, \"0\") + \":\" + String(dateSunrise.getMinutes()).padStart(2, \"0\") + \":\" + String(dateSunrise.getSeconds()).padStart(2, \"0\");\r\n\r\n            var dateSunset = new Date(data.sys.sunset * 1000);\r\n            var sunset_date = String(dateSunset.getHours()).padStart(2, \"0\") + \":\" + String(dateSunset.getMinutes()).padStart(2, \"0\") + \":\" + String(dateSunset.getSeconds()).padStart(2, \"0\")\r\n\r\n            this.setState({\r\n                temp: Math.floor(data.main.temp - 273.15),\r\n                city: data.name,\r\n                country: data.sys.country,\r\n                humidity: data.main.humidity,\r\n                sunrise: sunrise_date,\r\n                sunset: sunset_date,\r\n                error: undefined\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                temp: undefined,\r\n                city: undefined,\r\n                country: undefined,\r\n                sunrise: undefined,\r\n                sunset: undefined,\r\n                error: \"Search location, please. \"\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"main\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-5 info\">\r\n                                <Info />\r\n                            </div>\r\n                            <div className=\"col-sm-7 form\">\r\n                                <Form weatherMethod={this.gettingWeather} />\r\n                                <Weather\r\n                                    temp={this.state.temp}\r\n                                    city={this.state.city}\r\n                                    country={this.state.country}\r\n                                    humidity={this.state.humidity}\r\n                                    sunrise={this.state.sunrise}\r\n                                    sunset={this.state.sunset}\r\n                                    error={this.state.error}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"./App.css\"\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}